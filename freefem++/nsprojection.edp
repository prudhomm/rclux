real L1=20*1e-3,L2=118*1e-3,L3=50*1e-3; // the length of the semimajor axis and semiminor axis
real r1 = 0.002,r2=0.005,T=3, dt=0.5, k=0.000284, 
	I0=40000,alpha = 0.005, rho=1 ;

func c0 = 1;
func mu = k*I0*exp(-alpha*rho*(r2-y));
func uentry = 0.25*543.7*(r1^2-y^2)/(1.005*L1*1e-6);
func uexit = 0.25*1359.2*(r1^2-y^2)/(1.005*L3*1e-6);
int i=0 ,n = 1;
real nu=1./100.;
real beta=1/dt;


border Gamma0(t=0,1) { x = 0; y = -r1*t;   	     label=0; }
border Gamma1(t=0,1) { x = L1*t; y = -r1;  	     label=1; }
border Gamma2(t=0,1) { x = L1; y = -r1+(r1-r2)*t;    label=1; }
border Gamma3(t=0,1) { x = L1+L2*t; y = -r2;         label=1; }
border Gamma4(t=0,1) { x = L1+L2; y = -r2+(r2-r1)*t; label=2; }
border Gamma5(t=0,1) { x = L1+L2+L3*t; y = -r1;      label=3; }
border Gamma6(t=0,1) { x = L1+L2+L3; y = -r1*(1-t);  label=4; }
border Gamma7(t=0,1) { x = (L1+L2+L3)*(1-t); y = 0;  label=5; }

mesh Th=buildmesh(Gamma0(3*n)+Gamma1(10*n)+Gamma2(30*n)+Gamma3(150*n)+Gamma4(30*n)
+Gamma5(10*n)+Gamma6(3*n)+Gamma7(100*n));
plot(Th,wait=true, ps="steriliser2DTh.eps"); // Plot Th

fespace Vh(Th,P1);
Vh w,u = uentry, v =0, p = 0, q=0;
real area= int2d(Th)(1.);

for(int n=0;n<100;n++){
  Vh uold = u,  vold = v, pold=p;
  Vh f=convect([u,v],-dt,uold),  g=convect([u,v],-dt,vold);

  solve pb4u(u,w,init=n,solver=LU)
        =int2d(Th)(u*w/dt +nu*(dx(u)*dx(w)+dy(u)*dy(w)))
        -int2d(Th)((f/dt-dx(p))*w)
        + on(0,u = uentry) + on(1,3,5,u = 0)+ on(2,u=f)+on(4,u=uexit);
  plot(u);

  solve pb4v(v,w,init=n,solver=LU)
        = int2d(Th)(v*w/dt +nu*(dx(v)*dx(w)+dy(v)*dy(w)))
        -int2d(Th)((g/dt-dy(p))*w)
        +on(0,1,2,3,4,v = 0);

 real meandiv = int2d(Th)(dx(u)+dy(v))/area;

 solve pb4p(q,w,init=n,solver=LU)= int2d(Th)(dx(q)*dx(w)+dy(q)*dy(w))
    - int2d(Th)((dx(u)+ dy(v)-meandiv)*w/dt)+ on(3,q=0);

 real meanpq = int2d(Th)(pold - q)/area;
 if(n==50){
    Th = adaptmesh(Th,u,v,q); plot(Th, wait=true);
 }
 p = pold-q-meanpq;
 u = u + dx(q)*dt;
 v = v + dy(q)*dt;
}
plot(p,wait=1,ps="NSprojP.eps");
plot(u,wait=1,ps="NSprojU.eps");